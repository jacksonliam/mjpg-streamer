[tox]
envlist = py3{6,7,8,9}-tests
skip_missing_interpreters = true
skipsdist = true

[testenv]
envdir = {toxinidir}/.env
skip_install = true

passenv =
    CC
    CXX
    LD
    AR
    NM
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    XDG_*
    GITHUB*
    PIP_DOWNLOAD_CACHE

whitelist_externals =
    {build,clang,ctest,clean}: bash

changedir =
    ctest: mjpg-streamer-experimental

deps =
    {build,clang,ctest}: pip>=19.0.1
    {build,clang,ctest,bionic}: cmake
    {build,clang,ctest,bionic}: ninja

commands =
    {build,clang}: bash -c 'cmake -G {posargs:"Unix Makefiles"} -S mjpg-streamer-experimental -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON -DWXP_COMPAT=OFF -DCMAKE_INSTALL_PREFIX={toxinidir}/install'
    {build,clang}: bash -c 'cmake --build build --target install -j $(nproc)'
    {build,clang}: bash -c 'ctest -V --test-dir build/'
    ctest: bash -c 'ctest --build-generator {posargs:"Unix Makefiles"} --build-and-test . build --build-options -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DWXP_COMPAT=OFF --test-command ctest -V --timeout 1'
    #build: bash -c 'find install -type f -name \*.so | xargs ls -lh'
    clean: bash -c 'rm -rf install/ build/ mjpg-streamer-experimental/build/'
